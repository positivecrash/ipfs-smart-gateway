!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).ipfsSmartGateway={})}(this,(function(t){"use strict";let e=["https://ipfs.url.today/","https://ipfs.io/","https://flk-ipfs.xyz/","https://ipfs.cyou/","https://storry.tv/","https://dweb.link/","https://gateway.pinata.cloud/","https://hardbin.com/","https://ipfs.runfission.com/","https://ipfs.eth.aragon.network/","https://nftstorage.link/","https://4everland.io/","https://w3s.link/","https://trustless-gateway.link/"],a=[],r=[],n=null;const s="ipfs-smart-gateway:",i={stopOnFirstSuccess:!1,persistStorage:!0,timeout:3e3};function o(t){let e=t.trim();return/^[a-z][a-z\d+\-.]*:\/\//i.test(e)||(e="https://"+e),e=e.replace(/\/ipfs\/?$/,""),e=e.replace(/\/+$/,""),e}function c(){return e.slice()}function l(){if(!i.persistStorage)return a.slice();try{const t=JSON.parse(localStorage.getItem(`${s}user-gateways`));return Array.isArray(t)?t.map(o):[]}catch{return[]}}function u(){a=l()}function f(){return[...c(),...l()]}function p(t){n=o(t),i.persistStorage&&localStorage.setItem(`${s}picked`,n)}function y(){const t=localStorage.getItem(`${s}picked`);t&&(n=o(t))}async function w(t,e,a=i.timeout){const r=new AbortController,n=setTimeout((()=>r.abort()),a),s=performance.now();try{const a=await fetch(`${t}/ipfs/${e}`,{method:"GET",headers:{Range:"bytes=0-0"},signal:r.signal});return clearTimeout(n),a.ok?performance.now()-s:null}catch{return clearTimeout(n),null}}async function h(t,e){switch(e){case"json":return await t.json();case"blob":return await t.blob();default:return await t.text()}}t.checkGateways=async function(t={}){const{cid:e="bafybeibwzifw52ttrkqlikfzext5akxu7lz4xiwjgwzmqcpdzmp3n5vnbe",retry:a=0,retryDelay:n=1e3,onStart:s,onSuccess:i,onFail:o}=t;u(),y(),s&&s();const c=f();let l=[];for(let t=0;t<=a;t++){l=[],await Promise.all(c.map((async t=>{let a="unreachable",r=null;try{const n=await w(t,e);null!==n&&(a="available",r=n)}catch{}const n={url:t,status:a,time:r};l.push(n),"available"===a&&i&&i(n),"available"!==a&&o&&o(n)})));const s=l.filter((t=>null!==t.time));if(s.length>0||t===a)return r=s.sort(((t,e)=>t.time-e.time)),r.length&&p(r[0].url),r;await new Promise((t=>setTimeout(t,n)))}return r=[],[]},t.configure=function(t={}){Object.assign(i,t)},t.fetchFromPicked=async function(t,e="text"){if(!n)return null;try{const a=await fetch(`${n}/ipfs/${t}`);if(a.ok)return await h(a,e)}catch{}return null},t.fetchWithFallback=async function(t,e="text"){const a=r.map((t=>t.url)),n=f().filter((t=>!a.includes(t))),s=[...a,...n.sort((()=>Math.random()-.5))];for(const a of s)try{const r=await fetch(`${a}/ipfs/${t}`);if(r.ok)return await h(r,e)}catch{}return null},t.getAllGateways=f,t.getDefaultGateways=c,t.getPickedGateway=function(){return n},t.getSortedGateways=function(){return r.slice()},t.getUserGateways=l,t.loadPickedGatewayFromCache=y,t.loadUserGatewaysFromCache=u,t.removeUserGateways=function(t){if(!Array.isArray(t))return;const e=t.map(o),r=l().filter((t=>!e.includes(t)));a=r,i.persistStorage&&localStorage.setItem(`${s}user-gateways`,JSON.stringify(a))},t.setDefaultGateways=function(t){Array.isArray(t)&&(e=t.filter(Boolean).map(o))},t.setPickedGateway=p,t.setUserGateways=function(t){if(!Array.isArray(t))return;const r=t.map(o).filter(Boolean),n=e.map(o),c=r.filter((t=>!n.includes(t))),u=l(),f=Array.from(new Set([...u,...c]));if(f.length>15)throw new Error("Maximum of 15 user gateways exceeded");a=f,i.persistStorage&&localStorage.setItem(`${s}user-gateways`,JSON.stringify(a))}}));
//# sourceMappingURL=ipfs-smart-gateway.umd.js.map
