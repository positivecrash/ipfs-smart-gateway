!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).ipfsSmartGateway={})}(this,(function(t){"use strict";let e=["https://ipfs.url.today/ipfs/","https://ipfs.io/ipfs/","https://gateway.pinata.cloud/ipfs/","https://aira.mypinata.cloud/ipfs/"],a=[],n=[],r=[],o=null;const s="ipfs-smart-gateway:",i={stopOnFirstSuccess:!1,persistStorage:!0,timeout:3e3};function c(t){return/^https?:\/\//.test(t)||(t="https://"+t),t}function u(){try{const t=JSON.parse(localStorage.getItem(`${s}user-gateways`));return Array.isArray(t)?t.map(c):[]}catch(t){return[]}}function l(){a=u()}function f(){return[...e,...a]}function p(t){o=c(t),i.persistStorage&&localStorage.setItem(`${s}picked`,o)}function y(){const t=localStorage.getItem(`${s}picked`);t&&(o=c(t))}async function w(t,e,a=i.timeout){const n=new AbortController,r=setTimeout((()=>n.abort()),a),o=performance.now();try{const a=await fetch(`${t}${e}`,{method:"GET",headers:{Range:"bytes=0-0"},signal:n.signal});return clearTimeout(r),a.ok?performance.now()-o:null}catch(t){return clearTimeout(r),null}}async function m(t,e){switch(e){case"json":return await t.json();case"blob":return await t.blob();default:return await t.text()}}t.checkGateways=async function(t={}){const{cid:e="bafybeibwzifw52ttrkqlikfzext5akxu7lz4xiwjgwzmqcpdzmp3n5vnbe",onStart:a,onSuccess:o,onFail:s}=t;l(),y(),a&&a();const c=f(),u=[];for(const t of c){const a=await w(t,e),n={url:t,time:a,status:null!==a?"available":"unreachable"};if(u.push(n),null!==a&&o&&o(n),null===a&&s&&s(n),i.stopOnFirstSuccess&&null!==a)break}n=u,r=n.filter((t=>null!==t.time)).sort(((t,e)=>t.time-e.time)),r.length>0&&p(r[0].url)},t.configure=function(t={}){Object.assign(i,t)},t.fetchFromPicked=async function(t,e="text"){if(!o)return null;try{const a=await fetch(`${o}${t}`);if(a.ok)return await m(a,e)}catch(t){}return null},t.fetchWithFallback=async function(t,e="text"){const a=r.map((t=>t.url)),n=f().filter((t=>!a.includes(t))).sort((()=>Math.random()-.5)),o=[...a,...n];for(const a of o)try{const n=await fetch(`${a}${t}`);if(n.ok)return await m(n,e)}catch(t){}return null},t.getPickedGateway=function(){return o},t.getSortedGateways=function(){return r.slice()},t.getUserGateways=u,t.loadPickedGatewayFromCache=y,t.loadUserGatewaysFromCache=l,t.setDefaultGateways=function(t){Array.isArray(t)&&(e=t.filter(Boolean).map(c))},t.setPickedGateway=p,t.setUserGateways=function(t){const e=u(),n=t.map(c).filter(Boolean),r=Array.from(new Set([...e,...n]));if(r.length>15)throw new Error("Maximum of 15 user gateways exceeded");a=r,i.persistStorage&&localStorage.setItem(`${s}user-gateways`,JSON.stringify(a))}}));
//# sourceMappingURL=ipfs-smart-gateway.umd.js.map
